"""empty message

Revision ID: b1ed4422fde3
Revises: fa179459b846
Create Date: 2023-05-06 22:11:28.936504

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b1ed4422fde3'
down_revision = 'fa179459b846'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_pyduck():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('post_tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post_tag')),
    sa.UniqueConstraint('name', name=op.f('uq_post_tag_name'))
    )
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('vote_count', sa.Integer(), nullable=False),
    sa.Column('comment_count', sa.Integer(), nullable=False),
    sa.Column('answered', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.String(), nullable=False),
    sa.Column('updated_at', sa.String(), nullable=True),
    sa.Column('deleted_at', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_post_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post'))
    )
    op.create_table('assoc_post_tag',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], name=op.f('fk_assoc_post_tag_post_id_post')),
    sa.ForeignKeyConstraint(['tag_id'], ['post_tag.id'], name=op.f('fk_assoc_post_tag_tag_id_post_tag')),
    sa.PrimaryKeyConstraint('post_id', 'tag_id', name=op.f('pk_assoc_post_tag'))
    )
    op.create_table('post_comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('created_at', sa.String(), nullable=False),
    sa.Column('updated_at', sa.String(), nullable=True),
    sa.Column('deleted_at', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['post_comment.id'], name=op.f('fk_post_comment_parent_id_post_comment')),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], name=op.f('fk_post_comment_post_id_post')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_post_comment_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post_comment'))
    )
    op.create_table('post_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('created_at', sa.String(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], name=op.f('fk_post_history_post_id_post')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post_history'))
    )
    op.create_table('post_image_upload',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('mimetype', sa.String(), nullable=True),
    sa.Column('filesize', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], name=op.f('fk_post_image_upload_post_id_post')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_post_image_upload_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post_image_upload'))
    )
    op.create_table('post_reaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('created_at', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], name=op.f('fk_post_reaction_post_id_post')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_post_reaction_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post_reaction')),
    sa.UniqueConstraint('user_id', 'post_id', 'code', name=op.f('uq_post_reaction_user_id_post_id_code'))
    )
    op.create_table('post_vote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], name=op.f('fk_post_vote_post_id_post')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_post_vote_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post_vote'))
    )
    op.create_table('post_comment_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('created_at', sa.String(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['post_comment.id'], name=op.f('fk_post_comment_history_comment_id_post_comment')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post_comment_history'))
    )
    op.create_table('post_comment_reaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('created_at', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['post_comment.id'], name=op.f('fk_post_comment_reaction_comment_id_post_comment')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_post_comment_reaction_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post_comment_reaction'))
    )
    # ### end Alembic commands ###


def downgrade_pyduck():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('post_comment_reaction')
    op.drop_table('post_comment_history')
    op.drop_table('post_vote')
    op.drop_table('post_reaction')
    op.drop_table('post_image_upload')
    op.drop_table('post_history')
    op.drop_table('post_comment')
    op.drop_table('assoc_post_tag')
    op.drop_table('post')
    op.drop_table('post_tag')
    # ### end Alembic commands ###


def upgrade_faduck():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_faduck():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


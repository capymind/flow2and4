"""empty message

Revision ID: 4173c856da92
Revises: e6be1dfb2948
Create Date: 2023-05-15 14:32:18.051330

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4173c856da92'
down_revision = 'e6be1dfb2948'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_pyduck():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('post_comment_vote')
    op.drop_table('post_vote')
    with op.batch_alter_table('vote', schema=None) as batch_op:
        batch_op.add_column(sa.Column('post_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('post_comment_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_vote_post_id_post'), 'post', ['post_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_vote_post_comment_id_post_comment'), 'post_comment', ['post_comment_id'], ['id'])

    # ### end Alembic commands ###


def downgrade_pyduck():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vote', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_vote_post_comment_id_post_comment'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_vote_post_id_post'), type_='foreignkey')
        batch_op.drop_column('post_comment_id')
        batch_op.drop_column('post_id')

    op.create_table('post_vote',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('post_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], name='fk_post_vote_post_id_post'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_post_vote_user_id_user'),
    sa.PrimaryKeyConstraint('id', name='pk_post_vote')
    )
    op.create_table('post_comment_vote',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('comment_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['post_comment.id'], name='fk_post_comment_vote_comment_id_post_comment'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_post_comment_vote_user_id_user'),
    sa.PrimaryKeyConstraint('id', name='pk_post_comment_vote')
    )
    # ### end Alembic commands ###


def upgrade_faduck():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_faduck():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


"""empty message

Revision ID: dd2e7c83b99b
Revises: f77366dad049
Create Date: 2023-05-17 09:41:09.118200

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dd2e7c83b99b'
down_revision = 'f77366dad049'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_pyduck():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('notification_type', sa.String(), nullable=False),
    sa.Column('notification_target_type', sa.String(), nullable=True),
    sa.Column('notification_target_id', sa.Integer(), nullable=True),
    sa.Column('data', sa.String(), nullable=True),
    sa.Column('read', sa.Boolean(), nullable=False),
    sa.Column('urgent', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.String(), nullable=False),
    sa.Column('updated_at', sa.String(), nullable=True),
    sa.Column('from_user_id', sa.Integer(), nullable=True),
    sa.Column('to_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['from_user_id'], ['user.id'], name=op.f('fk_notification_from_user_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_user_id'], ['user.id'], name=op.f('fk_notification_to_user_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_notification_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notification')),
    sa.UniqueConstraint('user_id', 'notification_type', 'notification_target_type', 'notification_target_id', name=op.f('uq_notification_user_id_notification_type_notification_target_type_notification_target_id'))
    )
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notification_notification_target_type'), ['notification_target_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_notification_type'), ['notification_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_user_id_notification_notification_type_notification_notification_target_type'), ['user_id', 'notification_type', 'notification_target_type'], unique=False)

    op.create_table('user_action',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action_type', sa.String(), nullable=False),
    sa.Column('action_target_type', sa.String(), nullable=True),
    sa.Column('action_target_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_action_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_action')),
    sa.UniqueConstraint('user_id', 'action_type', 'action_target_type', 'action_target_id', name=op.f('uq_user_action_user_id_action_type_action_target_type_action_target_id'))
    )
    with op.batch_alter_table('user_action', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_action_action_target_type'), ['action_target_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_action_action_type'), ['action_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_action_user_id_user_action_action_type_user_action_action_target_type'), ['user_id', 'action_type', 'action_target_type'], unique=False)

    # ### end Alembic commands ###


def downgrade_pyduck():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_action', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_action_user_id_user_action_action_type_user_action_action_target_type'))
        batch_op.drop_index(batch_op.f('ix_user_action_action_type'))
        batch_op.drop_index(batch_op.f('ix_user_action_action_target_type'))

    op.drop_table('user_action')
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_user_id_notification_notification_type_notification_notification_target_type'))
        batch_op.drop_index(batch_op.f('ix_notification_user_id'))
        batch_op.drop_index(batch_op.f('ix_notification_notification_type'))
        batch_op.drop_index(batch_op.f('ix_notification_notification_target_type'))

    op.drop_table('notification')
    # ### end Alembic commands ###


def upgrade_faduck():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_faduck():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


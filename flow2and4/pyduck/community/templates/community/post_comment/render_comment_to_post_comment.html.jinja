{% from "community/post_comment/render_reaction.html.jinja" import render_reaction with context %}
{% macro render_comment_to_post_comment(comment) %}
<div
     x-data="{
        editmode: false,
        commentmode: false
    }"
     data-pd-comment-to-post-comment="{{ comment.id }}"
     @comment-to-post-comment-created="commentmode=false"
     class="d-flex ps-2 ps-md-3 pe-3">
    <div class="vr me-2"></div>
    <div x-show="!editmode" class="flex-grow-1 py-3">
        <div class="d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center gap-1">
                <img class="rounded-circle" src="{{ comment.user.avatar.url }}" width="33" height="33">
                <span>{{ comment.user.nickname }}</span>
            </div>
            <div class="d-flex gap-2">
                {% if comment.history|length %}
                <div class="dropdown">
                    <button class="btn btn-outline-secondary border-0 dropdown-toggle" type="button"
                            data-bs-toggle="dropdown" aria-expanded="false">
                        <small>수정이력</small>
                    </button>
                    <div class="dropdown-menu dropdown-menu-end px-3">
                        <div>{{ comment.history|length}}번 수정됨</div>
                    </div>
                </div>
                {% endif %}
                {% if comment.user_id is eq current_user.id %}
                <div class="dropdown">
                    <button class="btn btn-outline-secondary border-0 dropdown-toggle" type="button"
                            data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-three-dots"></i>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li>
                            <button class="dropdown-item"
                                    type="button"
                                    @click="editmode=true; 
                                            $nextTick(() => { 
                                                $dispatch(
                                                    'require-editor', { target: 'comment_to_post_comment', id: '{{ comment.id }}' }
                                                ) 
                                            })">
                                수정하기
                            </button>
                        </li>
                        <li>
                            <button class="dropdown-item"
                                    data-bs-toggle="modal"
                                    data-bs-target="[data-pd-modal-manager]"
                                    @click="$dispatch(
                                        'delete-comment-to-post-comment',
                                        { 
                                            url: '{{ url_for(
                                                'pyduck.community.comment_to_post_comment',
                                                post_id=comment.post_id, 
                                                post_comment_id=comment.parent_id,
                                                comment_id=comment.id,
                                                _method='DELETE') }}',
                                            target: {{ comment.id }} 
                                        })">
                                삭제하기
                            </button>
                        </li>
                    </ul>
                </div>
                {% endif %}
            </div>
        </div>
        <div class="pt-4">
            {{ comment.content }}
        </div>
        <div class="pt-2 d-flex justify-content-between">
            {{ render_reaction(comment) }}
        </div>
        <div class="pt-1">
            <button
                    class="btn btn-sm btn-outline-secondary border-0"
                    x-show="!commentmode"
                    @click="commentmode=true;
                            $nextTick(() => {
                                $dispatch(
                                    'require-editor', { target: 'comment_to_comment', id: '{{ comment.id }}'}
                                )
                            })">
                <span class="fst-italic text-underline"><u>대댓글 달기</u></span>
            </button>
            <div class="d-flex justify-content-end">
                <template x-if="commentmode">
                    <div class="pt-3 pt-lg-4 pb-2 pb-lg-3 px-2 px-lg-3 rounded-2 bg-body-tertiary text-end mt-2"
                         style="width:99%">
                        <form
                              class="post-comment"
                              hx-post="{{ url_for(
                                'pyduck.community.comment_to_post_comment', 
                                post_id=comment.post_id, 
                                post_comment_id=comment.parent_id,
                                _method='POST') }}"
                              hx-swap="beforeend"
                              hx-target="[data-pd-comments-to-post-comment='{{ comment.parent_id }}']">
                            <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
                            <textarea name="content"
                                      data-pd-comment-to-comment-editor="{{ comment.id }}"></textarea>
                            <div class="pt-2 text-end">
                                <button type="button"
                                        class="btn btn-secondary rounded-0"
                                        @click="commentmode=false">
                                    취소하기
                                </button>
                                <button class="btn btn-primary rounded-0">
                                    대댓글달기
                                </button>
                            </div>
                        </form>
                    </div>
                </template>
            </div>
        </div>
    </div>
    <template x-if="editmode">
        <div class="flex-grow-1 py-3">
            <div class="pt-3 pt-lg-4 pb-2 pb-lg-3 px-2 px-lg-3 rounded-2 bg-body-tertiary text-end mt-2"
                 style="width:99%">
                <form
                      class="post-comment"
                      hx-put="{{ url_for('pyduck.community.comment_to_post_comment', 
                                post_id=comment.post_id, 
                                post_comment_id=comment.parent_id,
                                comment_id=comment.id,
                                _method='PUT') }}"
                      hx-swap="outerHTML"
                      hx-target="[data-pd-comment-to-post-comment='{{ comment.id }}']">
                    <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
                    <input type="hidden" name="comment_id" value="{{ comment.id }}">
                    <textarea name="content" data-pd-comment-to-post-comment-editor="{{ comment.id }}">
                        {{ comment.content }}
                    </textarea>
                    <div class="pt-2 text-end">
                        <button
                                class="btn btn-secondary rounded-0"
                                type="button"
                                @click="editmode=false">
                            취소하기
                        </button>
                        <button class="btn btn-primary rounded-0">
                            수정하기
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </template>
</div>
{% endmacro %}